
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author HOME
 */
public class Rhombus_Solver extends javax.swing.JFrame {

    /**
     * Creates new form Rhombus_Solver
     */
    public Rhombus_Solver() {
        initComponents();
        setVisible(true);
        setResizable(false);
        setTitle("RHOMBUS SOLVER");
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_sideS = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_diagonalP = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_diagonalQ = new javax.swing.JTextField();
        calculate = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        txt_Area = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        txt_Perimeter = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 204), 3, true));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 90)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Rhombus Solver");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/examples/Rhombus.png"))); // NOI18N
        jLabel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 240), 2, true));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Side s");

        txt_sideS.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txt_sideS.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_sideS.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 204), 2, true));
        txt_sideS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_sideSMouseClicked(evt);
            }
        });
        txt_sideS.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_sideSFocusGained(evt);
            }
        });
        txt_sideS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_sideSKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("diagonal p");

        txt_diagonalP.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txt_diagonalP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_diagonalP.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 204), 2, true));
        txt_diagonalP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_diagonalPMouseClicked(evt);
            }
        });
        txt_diagonalP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_diagonalPFocusGained(evt);
            }
        });
        txt_diagonalP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_diagonalPKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("diagonal q");

        txt_diagonalQ.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txt_diagonalQ.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_diagonalQ.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 204), 2, true));
        txt_diagonalQ.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_diagonalQMouseClicked(evt);
            }
        });
        txt_diagonalQ.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_diagonalQFocusGained(evt);
            }
        });
        txt_diagonalQ.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_diagonalQKeyPressed(evt);
            }
        });

        calculate.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        calculate.setText("Calculate");
        calculate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        calculate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        calculate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                calculateMouseClicked(evt);
            }
        });
        calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateActionPerformed(evt);
            }
        });
        calculate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                calculateFocusGained(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton2.setText("Reset");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setText("Area");

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        txt_Area.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txt_Area.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_Area.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 240), 2, true));

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, txt_Area, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(txt_Area, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        txt_Perimeter.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txt_Perimeter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_Perimeter.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 240), 2, true));

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, txt_Perimeter, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(txt_Perimeter, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel9.setText("Perimeter");

        jButton4.setBackground(new java.awt.Color(153, 153, 255));
        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 0, 102));
        jButton4.setText("Main Menu");
        jButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(153, 153, 255));
        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 0, 102));
        jButton5.setText("Geometric Calculator");
        jButton5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 102));
        jLabel10.setText("Rhombus Solver");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jPanel1Layout.createSequentialGroup()
                .add(10, 10, 10)
                .add(jLabel2)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                                .add(37, 37, 37)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel8)
                                    .add(jLabel9))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                            .add(txt_sideS)
                                            .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 145, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                        .add(18, 18, 18)
                                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                            .add(txt_diagonalP)
                                            .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 145, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                        .add(18, 18, 18)
                                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(txt_diagonalQ, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 145, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 137, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .add(calculate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 220, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(28, 28, 28)
                                        .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 220, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap())
                    .add(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton5)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel10)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(10, 10, 10)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel10, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(20, 20, 20)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(41, 41, 41)
                                .add(txt_diagonalQ, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(txt_diagonalP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                                .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(txt_sideS, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(20, 20, 20)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jButton2)
                            .add(calculate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jLabel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .add(jLabel2))
                .add(0, 10, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(new java.awt.Component[] {calculate, jButton2}, org.jdesktop.layout.GroupLayout.VERTICAL);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_sideSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_sideSMouseClicked
        // TODO add your handling code here:
        txt_sideS.setBackground(Color.WHITE);
    }//GEN-LAST:event_txt_sideSMouseClicked

    private void txt_sideSFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_sideSFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_sideSFocusGained

    private void txt_sideSKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_sideSKeyPressed
        // TODO add your handling code here:
        if ((evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' || (evt.getKeyChar() == 8) ||  (evt.getKeyChar() == 10) || evt.getKeyChar()== '.'))  {
            int l=txt_sideS.getText().length();//System.out.println(len);
        if((l<=5) || (evt.getKeyChar()==8)){
            String value = txt_sideS.getText();
            if((evt.getKeyChar() == '.') && value.contains(".")){
                txt_sideS.setEditable(false);
            }
            else{
                txt_sideS.setEditable(true);
                if((evt.getKeyChar() == 10)){
                    if("".equals(txt_sideS.getText()) || "".equals(txt_diagonalP.getText()) || "".equals(txt_diagonalQ.getText())){
                        if("".equals(txt_sideS.getText()) && "".equals(txt_diagonalP.getText()) && "".equals(txt_diagonalQ.getText())){
                            JOptionPane.showMessageDialog(null,"PLEASE ENTER ALL THE SIDES OF RHOMBUS");
                            txt_sideS.setBackground(Color.YELLOW);
                            txt_diagonalP.setBackground(Color.YELLOW);
                            txt_diagonalQ.setBackground(Color.YELLOW);
                        }
                        else if("".equals(txt_sideS.getText()) && (!"".equals(txt_diagonalP.getText())) && (!"".equals(txt_diagonalQ.getText()))){
                            JOptionPane.showMessageDialog(null,"PLEASE ENTER THE SIDE A OF RHOMBUS");
                            txt_sideS.setBackground(Color.YELLOW);
                        }
                        else if("".equals(txt_diagonalP.getText()) && (!"".equals(txt_diagonalQ.getText())) && (!"".equals(txt_sideS.getText()))){
                            JOptionPane.showMessageDialog(null,"PLEASE ENTER THE DIAGONAL P OF RHOMBUS");
                            txt_diagonalP.setBackground(Color.YELLOW);
                        }
                        else if("".equals(txt_diagonalQ.getText()) && (!"".equals(txt_sideS.getText())) && (!"".equals(txt_diagonalP.getText()))){
                            JOptionPane.showMessageDialog(null,"PLEASE ENTER THE DIAGONAL Q OF RHOMBUS");
                            txt_diagonalQ.setBackground(Color.YELLOW);
                        }
                        else if("".equals(txt_sideS.getText()) && "".equals(txt_diagonalP.getText())){
                            JOptionPane.showMessageDialog(null,"PLEASE ENTER THE SIDES S AND DIAGONAL P OF RHOMBUS");
                            txt_sideS.setBackground(Color.YELLOW);
                            txt_diagonalP.setBackground(Color.YELLOW);
                        }
                        else if("".equals(txt_diagonalP.getText()) && "".equals(txt_diagonalQ.getText())){
                            JOptionPane.showMessageDialog(null,"PLEASE ENTER THE DIAGONAL P AND Q OF RHOMBUS");
                            txt_diagonalP.setBackground(Color.YELLOW);
                            txt_diagonalQ.setBackground(Color.YELLOW);
                        }
                        else{
                            JOptionPane.showMessageDialog(null,"PLEASE ENTER THE SIDES S AND DIAGONAL Q OF RHOMBUS");
                            txt_sideS.setBackground(Color.YELLOW);
                            txt_diagonalQ.setBackground(Color.YELLOW);
                        }
                    }
                    else{
                        calculate.requestFocus();calculate.setFocusable(true);
                    }
                }
            }
        }
        else{
            txt_sideS.setEditable(false);
        }
            
        }
        else {
            txt_sideS.setEditable(false);
        }
    }//GEN-LAST:event_txt_sideSKeyPressed

    private void txt_diagonalPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_diagonalPMouseClicked
        // TODO add your handling code here:
        txt_diagonalP.setBackground(Color.WHITE);
    }//GEN-LAST:event_txt_diagonalPMouseClicked

    private void txt_diagonalPFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_diagonalPFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_diagonalPFocusGained

    private void txt_diagonalPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_diagonalPKeyPressed
        // TODO add your handling code here:
        if ((evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' || (evt.getKeyChar() == 8) || (evt.getKeyChar()==10) || evt.getKeyChar()== '.'))  {
            int l=txt_diagonalP.getText().length();//System.out.println(len);
        if((l<=5) || (evt.getKeyChar()==8)){
            String value = txt_diagonalP.getText();
            if((evt.getKeyChar() == '.') && value.contains(".")){
                txt_diagonalP.setEditable(false);
            }
            else{
                txt_diagonalP.setEditable(true);
                if((evt.getKeyChar() == 10)){
                    if("".equals(txt_sideS.getText()) || "".equals(txt_diagonalP.getText()) || "".equals(txt_diagonalQ.getText())){
                        if("".equals(txt_sideS.getText()) && "".equals(txt_diagonalP.getText()) && "".equals(txt_diagonalQ.getText())){
                            JOptionPane.showMessageDialog(null,"PLEASE ENTER ALL THE SIDES OF RHOMBUS");
                            txt_sideS.setBackground(Color.YELLOW);
                            txt_diagonalP.setBackground(Color.YELLOW);
                            txt_diagonalQ.setBackground(Color.YELLOW);
                        }
                        else if("".equals(txt_sideS.getText()) && (!"".equals(txt_diagonalP.getText())) && (!"".equals(txt_diagonalQ.getText()))){
                            JOptionPane.showMessageDialog(null,"PLEASE ENTER THE SIDE A OF RHOMBUS");
                            txt_sideS.setBackground(Color.YELLOW);
                        }
                        else if("".equals(txt_diagonalP.getText()) && (!"".equals(txt_diagonalQ.getText())) && (!"".equals(txt_sideS.getText()))){
                            JOptionPane.showMessageDialog(null,"PLEASE ENTER THE DIAGONAL P OF RHOMBUS");
                            txt_diagonalP.setBackground(Color.YELLOW);
                        }
                        else if("".equals(txt_diagonalQ.getText()) && (!"".equals(txt_sideS.getText())) && (!"".equals(txt_diagonalP.getText()))){
                            JOptionPane.showMessageDialog(null,"PLEASE ENTER THE DIAGONAL Q OF RHOMBUS");
                            txt_diagonalQ.setBackground(Color.YELLOW);
                        }
                        else if("".equals(txt_sideS.getText()) && "".equals(txt_diagonalP.getText())){
                            JOptionPane.showMessageDialog(null,"PLEASE ENTER THE SIDES S AND DIAGONAL P OF RHOMBUS");
                            txt_sideS.setBackground(Color.YELLOW);
                            txt_diagonalP.setBackground(Color.YELLOW);
                        }
                        else if("".equals(txt_diagonalP.getText()) && "".equals(txt_diagonalQ.getText())){
                            JOptionPane.showMessageDialog(null,"PLEASE ENTER THE DIAGONAL P AND Q OF RHOMBUS");
                            txt_diagonalP.setBackground(Color.YELLOW);
                            txt_diagonalQ.setBackground(Color.YELLOW);
                        }
                        else{
                            JOptionPane.showMessageDialog(null,"PLEASE ENTER THE SIDES S AND DIAGONAL Q OF RHOMBUS");
                            txt_sideS.setBackground(Color.YELLOW);
                            txt_diagonalQ.setBackground(Color.YELLOW);
                        }
                    }
                    else{
                        calculate.requestFocus();calculate.setFocusable(true);
                    }
                }
            }
        }
        else{
            txt_diagonalP.setEditable(false);
        }
        }
        else {
            txt_diagonalP.setEditable(false);
        }
    }//GEN-LAST:event_txt_diagonalPKeyPressed

    private void txt_diagonalQMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_diagonalQMouseClicked
        // TODO add your handling code here:
        txt_diagonalQ.setBackground(Color.WHITE);
    }//GEN-LAST:event_txt_diagonalQMouseClicked

    private void txt_diagonalQFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_diagonalQFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_diagonalQFocusGained

    private void txt_diagonalQKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_diagonalQKeyPressed
        // TODO add your handling code here:
        if ((evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' || (evt.getKeyChar() == 8) || (evt.getKeyChar()==10) || evt.getKeyChar()== '.'))  {
            int l=txt_diagonalQ.getText().length();//System.out.println(len);
        if((l<=5) || (evt.getKeyChar()==8)){
            String value = txt_diagonalQ.getText();
            if((evt.getKeyChar() == '.') && value.contains(".")){
                txt_diagonalQ.setEditable(false);
            }
            else{
                txt_diagonalQ.setEditable(true);
                if((evt.getKeyChar() == 10)){
                    if("".equals(txt_sideS.getText()) || "".equals(txt_diagonalP.getText()) || "".equals(txt_diagonalQ.getText())){
                        if("".equals(txt_sideS.getText()) && "".equals(txt_diagonalP.getText()) && "".equals(txt_diagonalQ.getText())){
                            JOptionPane.showMessageDialog(null,"PLEASE ENTER ALL THE SIDES OF RHOMBUS");
                            txt_sideS.setBackground(Color.YELLOW);
                            txt_diagonalP.setBackground(Color.YELLOW);
                            txt_diagonalQ.setBackground(Color.YELLOW);
                        }
                        else if("".equals(txt_sideS.getText()) && (!"".equals(txt_diagonalP.getText())) && (!"".equals(txt_diagonalQ.getText()))){
                            JOptionPane.showMessageDialog(null,"PLEASE ENTER THE SIDE A OF RHOMBUS");
                            txt_sideS.setBackground(Color.YELLOW);
                        }
                        else if("".equals(txt_diagonalP.getText()) && (!"".equals(txt_diagonalQ.getText())) && (!"".equals(txt_sideS.getText()))){
                            JOptionPane.showMessageDialog(null,"PLEASE ENTER THE DIAGONAL P OF RHOMBUS");
                            txt_diagonalP.setBackground(Color.YELLOW);
                        }
                        else if("".equals(txt_diagonalQ.getText()) && (!"".equals(txt_sideS.getText())) && (!"".equals(txt_diagonalP.getText()))){
                            JOptionPane.showMessageDialog(null,"PLEASE ENTER THE DIAGONAL Q OF RHOMBUS");
                            txt_diagonalQ.setBackground(Color.YELLOW);
                        }
                        else if("".equals(txt_sideS.getText()) && "".equals(txt_diagonalP.getText())){
                            JOptionPane.showMessageDialog(null,"PLEASE ENTER THE SIDES S AND DIAGONAL P OF RHOMBUS");
                            txt_sideS.setBackground(Color.YELLOW);
                            txt_diagonalP.setBackground(Color.YELLOW);
                        }
                        else if("".equals(txt_diagonalP.getText()) && "".equals(txt_diagonalQ.getText())){
                            JOptionPane.showMessageDialog(null,"PLEASE ENTER THE DIAGONAL P AND Q OF RHOMBUS");
                            txt_diagonalP.setBackground(Color.YELLOW);
                            txt_diagonalQ.setBackground(Color.YELLOW);
                        }
                        else{
                            JOptionPane.showMessageDialog(null,"PLEASE ENTER THE SIDES S AND DIAGONAL Q OF RHOMBUS");
                            txt_sideS.setBackground(Color.YELLOW);
                            txt_diagonalQ.setBackground(Color.YELLOW);
                        }
                    }
                    else{
                        calculate.requestFocus();calculate.setFocusable(true);
                    }
                }
            }
        }
        else{
            txt_diagonalQ.setEditable(false);
        }
        }
        else {
            txt_diagonalQ.setEditable(false);
        }
    }//GEN-LAST:event_txt_diagonalQKeyPressed

    private void calculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_calculateActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        txt_sideS.setText("");
        txt_diagonalP.setText("");
        txt_diagonalQ.setText("");
        txt_Area.setText("");
        txt_Perimeter.setText("");
        txt_sideS.setBackground(Color.WHITE);
        txt_diagonalP.setBackground(Color.WHITE);
        txt_diagonalQ.setBackground(Color.WHITE);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        MAIN_MENU obj=new MAIN_MENU();
        obj.setVisible(true);
        CloseFrame();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        GeometricCalculator obj=new GeometricCalculator();
        obj.setVisible(true);
        CloseFrame();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void calculateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calculateMouseClicked
        // TODO add your handling code here:
        
        float area=0,perimeter=0;
        String type=null;
        String status=null;
        txt_Area.setText("");
        txt_Perimeter.setText("");

        if("".equals(txt_sideS.getText()) || "".equals(txt_diagonalP.getText()) || "".equals(txt_diagonalQ.getText())){
            if("".equals(txt_sideS.getText()) && "".equals(txt_diagonalP.getText()) && "".equals(txt_diagonalQ.getText())){
                JOptionPane.showMessageDialog(null,"PLEASE ENTER ALL THE SIDES OF RHOMBUS");
                txt_sideS.setBackground(Color.YELLOW);
                txt_diagonalP.setBackground(Color.YELLOW);
                txt_diagonalQ.setBackground(Color.YELLOW);
            }

            else if("".equals(txt_sideS.getText()) && (!"".equals(txt_diagonalP.getText())) && (!"".equals(txt_diagonalQ.getText()))){
                JOptionPane.showMessageDialog(null,"PLEASE ENTER THE SIDE A OF RHOMBUS");
                txt_sideS.setBackground(Color.YELLOW);
            }

            else if("".equals(txt_diagonalP.getText()) && (!"".equals(txt_diagonalQ.getText())) && (!"".equals(txt_sideS.getText()))){
                JOptionPane.showMessageDialog(null,"PLEASE ENTER THE DIAGONAL P OF RHOMBUS");
                txt_diagonalP.setBackground(Color.YELLOW);
            }

            else if("".equals(txt_diagonalQ.getText()) && (!"".equals(txt_sideS.getText())) && (!"".equals(txt_diagonalP.getText()))){
                JOptionPane.showMessageDialog(null,"PLEASE ENTER THE DIAGONAL Q OF RHOMBUS");
                txt_diagonalQ.setBackground(Color.YELLOW);
            }

            else if("".equals(txt_sideS.getText()) && "".equals(txt_diagonalP.getText())){
                JOptionPane.showMessageDialog(null,"PLEASE ENTER THE SIDES S AND DIAGONAL P OF RHOMBUS");
                txt_sideS.setBackground(Color.YELLOW);
                txt_diagonalP.setBackground(Color.YELLOW);
            }

            else if("".equals(txt_diagonalP.getText()) && "".equals(txt_diagonalQ.getText())){
                JOptionPane.showMessageDialog(null,"PLEASE ENTER THE DIAGONAL P AND Q OF RHOMBUS");
                txt_diagonalP.setBackground(Color.YELLOW);
                txt_diagonalQ.setBackground(Color.YELLOW);
            }

            else{
                JOptionPane.showMessageDialog(null,"PLEASE ENTER THE SIDES S AND DIAGONAL Q OF RHOMBUS");
                txt_sideS.setBackground(Color.YELLOW);
                txt_diagonalQ.setBackground(Color.YELLOW);
            }
        }

        else{
            float input_sideS=Float.parseFloat(txt_sideS.getText());
            float input_diagonalP=Float.parseFloat(txt_diagonalP.getText());
            float input_diagonalQ=Float.parseFloat(txt_diagonalQ.getText());
            RhombusSolver obj=new RhombusSolver(input_sideS,input_diagonalP,input_diagonalQ);
            perimeter=obj.computeParimeter ();
            area=obj.computeArea ();
            txt_Area.setText(String.valueOf(area));
            txt_Perimeter.setText(String.valueOf(perimeter));
        }
    }//GEN-LAST:event_calculateMouseClicked

    private void calculateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_calculateFocusGained
        // TODO add your handling code here:
        if("".equals(txt_sideS.getText()) || "".equals(txt_diagonalP.getText()) || "".equals(txt_diagonalQ.getText())){}
        else{
            float area=0,perimeter=0;
            String type=null;
            String status=null;
            txt_Area.setText("");
            txt_Perimeter.setText("");
            float input_sideS=Float.parseFloat(txt_sideS.getText());
            float input_diagonalP=Float.parseFloat(txt_diagonalP.getText());
            float input_diagonalQ=Float.parseFloat(txt_diagonalQ.getText());
            RhombusSolver obj=new RhombusSolver(input_sideS,input_diagonalP,input_diagonalQ);
            perimeter=obj.computeParimeter ();
            area=obj.computeArea ();
            txt_Area.setText(String.valueOf(area));
            txt_Perimeter.setText(String.valueOf(perimeter));
        }
    }//GEN-LAST:event_calculateFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Rhombus_Solver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Rhombus_Solver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Rhombus_Solver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Rhombus_Solver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Rhombus_Solver().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton calculate;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel txt_Area;
    private javax.swing.JLabel txt_Perimeter;
    private javax.swing.JTextField txt_diagonalP;
    private javax.swing.JTextField txt_diagonalQ;
    private javax.swing.JTextField txt_sideS;
    // End of variables declaration//GEN-END:variables

    private void CloseFrame() {
        super.dispose();
    }
}
