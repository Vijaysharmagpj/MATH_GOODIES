
import java.awt.Dimension;
import java.awt.Toolkit;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author HOME
 */
public class Base_Convertor extends javax.swing.JFrame {

    /**
     * Creates new form Base_Convertor
     */
    public Base_Convertor() {
        initComponents();
        setVisible(true);
        setResizable(false);
        setTitle("BASE CONVERTOR");
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_from = new javax.swing.JTextField();
        from_unit = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        to_unit = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        txt_to = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 204), 3, true));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 90)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Base Convertor");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel2.setText("Select the type of unit you want to convert");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel3.setText("From");

        txt_from.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        txt_from.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 240), new java.awt.Color(0, 0, 240), new java.awt.Color(0, 0, 240), new java.awt.Color(0, 0, 240)));
        txt_from.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_fromMouseClicked(evt);
            }
        });
        txt_from.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_fromFocusGained(evt);
            }
        });
        txt_from.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_fromKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_fromKeyReleased(evt);
            }
        });

        from_unit.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        from_unit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Binary", "Decimal", "Hexadecimal", "Octal" }));
        from_unit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 240), new java.awt.Color(0, 0, 240), new java.awt.Color(0, 0, 240), new java.awt.Color(0, 0, 240)));
        from_unit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                from_unitActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel4.setText("To");

        to_unit.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        to_unit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Binary", "Decimal", "Hexadecimal", "Octal" }));
        to_unit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 240), new java.awt.Color(0, 0, 240), new java.awt.Color(0, 0, 240), new java.awt.Color(0, 0, 240)));
        to_unit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                to_unitActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        txt_to.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        txt_to.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 240), 2, true));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txt_to, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txt_to, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
        );

        jButton4.setBackground(new java.awt.Color(153, 153, 255));
        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 0, 102));
        jButton4.setText("Main Menu");
        jButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 102));
        jLabel7.setText("Base Converter");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(from_unit, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_from, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(to_unit, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addGap(120, 467, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_from, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(from_unit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(to_unit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_fromMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_fromMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_fromMouseClicked

    private void txt_fromFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_fromFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_fromFocusGained

    private void txt_fromKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_fromKeyPressed
        // TODO add your handling code here:
        int l=txt_from.getText().length();//System.out.println(len);
        if((l<=9) || (evt.getKeyChar()==8)){
            if(from_unit.getSelectedItem()=="Binary"){
            if (((evt.getKeyChar() >= '0' && evt.getKeyChar() <= '1') || (evt.getKeyChar() == 8)))  {
                txt_from.setEditable(true);
            }
            else {
                txt_from.setEditable(false);
            }
        }
        else if(from_unit.getSelectedItem()=="Decimal"){
            if (((evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') || (evt.getKeyChar() == 8)))  {
                txt_from.setEditable(true);
            }
            else {
                txt_from.setEditable(false);
            }
        }
        else if(from_unit.getSelectedItem()=="Hexadecimal"){
            if (((evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' || evt.getKeyChar() == 'A' || evt.getKeyChar() == 'B' || evt.getKeyChar() == 'C' || evt.getKeyChar() == 'D' || evt.getKeyChar() == 'E' || evt.getKeyChar() == 'F'
                || evt.getKeyChar() == 'a' || evt.getKeyChar() == 'b' || evt.getKeyChar() == 'c' || evt.getKeyChar() == 'd' || evt.getKeyChar() == 'e' || evt.getKeyChar() == 'f')|| (evt.getKeyChar() == 8)))  {
                txt_from.setEditable(true);
            }
            else {
                txt_from.setEditable(false);
            }
        }
        else if(from_unit.getSelectedItem()=="Octal"){
            if (((evt.getKeyChar() >= '0' && evt.getKeyChar() <= '7') || (evt.getKeyChar() == 8)))  {
                txt_from.setEditable(true);
            }
            else {
                txt_from.setEditable(false);
            }
        }
            
        }
        else{
            txt_from.setEditable(false);
        }
        
    }//GEN-LAST:event_txt_fromKeyPressed

    private void txt_fromKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_fromKeyReleased
        // TODO add your handling code here:
        if(from_unit.getSelectedItem()=="Binary"){
            if ((evt.getKeyChar() >= '0' && evt.getKeyChar() <= '1' || (evt.getKeyChar() == 8) ))  {
                if(!"".equals(txt_from.getText())){
                txt_from.setEditable(true);
                String from__unit,to__unit;
                String value_of_from_unit;
                String value_of_to_unit;
                from__unit=(String) from_unit.getSelectedItem();
                to__unit=(String) to_unit.getSelectedItem();
                value_of_from_unit=(txt_from.getText());
                BaseConvertor obj=new BaseConvertor();
                value_of_to_unit=obj.convertUnit ( from__unit , to__unit , value_of_from_unit);
                txt_to.setText(String.valueOf(value_of_to_unit));
            }
                else if("".equals(txt_from.getText())){
                txt_to.setText("");
            }
        }
            else {
            txt_from.setEditable(false);
        }
        }
        else if(from_unit.getSelectedItem()=="Decimal"){
            if ((evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' || (evt.getKeyChar() == 8) ))  {
                if(!"".equals(txt_from.getText())){
                txt_from.setEditable(true);
                String from__unit,to__unit;
                String value_of_from_unit;
                String value_of_to_unit;
                from__unit=(String) from_unit.getSelectedItem();
                to__unit=(String) to_unit.getSelectedItem();
                value_of_from_unit=(txt_from.getText());
                BaseConvertor obj=new BaseConvertor();
                value_of_to_unit=obj.convertUnit ( from__unit , to__unit , value_of_from_unit);
                txt_to.setText(String.valueOf(value_of_to_unit));
            }
                else if("".equals(txt_from.getText())){
                txt_to.setText("");
            }
        }
            else {
            txt_from.setEditable(false);
        }
        }
        else if(from_unit.getSelectedItem()=="Hexadecimal"){
            if ((evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' || (evt.getKeyChar() == 8) || evt.getKeyChar() == 'A' || evt.getKeyChar() == 'B' || evt.getKeyChar() == 'C' || evt.getKeyChar() == 'D' || evt.getKeyChar() == 'E' || evt.getKeyChar() == 'F'
                || evt.getKeyChar() == 'a' || evt.getKeyChar() == 'b' || evt.getKeyChar() == 'c' || evt.getKeyChar() == 'd' || evt.getKeyChar() == 'e' || evt.getKeyChar() == 'f'))  {
                if(!"".equals(txt_from.getText())){
                txt_from.setEditable(true);
                String from__unit,to__unit;
                String value_of_from_unit;
                String value_of_to_unit;
                from__unit=(String) from_unit.getSelectedItem();
                to__unit=(String) to_unit.getSelectedItem();
                value_of_from_unit=(txt_from.getText());
                BaseConvertor obj=new BaseConvertor();
                value_of_to_unit=obj.convertUnit ( from__unit , to__unit , value_of_from_unit);
                txt_to.setText(String.valueOf(value_of_to_unit));
            }
                else if("".equals(txt_from.getText())){
                txt_to.setText("");
            }
        }
            else {
            txt_from.setEditable(false);
        }
        }
        else if(from_unit.getSelectedItem()=="Octal"){
            if ((evt.getKeyChar() >= '0' && evt.getKeyChar() <= '7' || (evt.getKeyChar() == 8) ))  {
                if(!"".equals(txt_from.getText())){
                txt_from.setEditable(true);
                String from__unit,to__unit;
                String value_of_from_unit;
                String value_of_to_unit;
                from__unit=(String) from_unit.getSelectedItem();
                to__unit=(String) to_unit.getSelectedItem();
                value_of_from_unit=(txt_from.getText());
                BaseConvertor obj=new BaseConvertor();
                value_of_to_unit=obj.convertUnit ( from__unit , to__unit , value_of_from_unit);
                txt_to.setText(String.valueOf(value_of_to_unit));
            }
                else if("".equals(txt_from.getText())){
                txt_to.setText("");
            }
        }
            else {
            txt_from.setEditable(false);
        }
        }
        
    }//GEN-LAST:event_txt_fromKeyReleased

    private void from_unitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_from_unitActionPerformed
        // TODO add your handling code here:
        txt_from.setText("");
        txt_to.setText("");
    }//GEN-LAST:event_from_unitActionPerformed

    private void to_unitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_to_unitActionPerformed
        // TODO add your handling code here:
        txt_from.setText("");
        txt_to.setText("");
    }//GEN-LAST:event_to_unitActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        MAIN_MENU obj=new MAIN_MENU();
        obj.setVisible(true);
        CloseFrame();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Base_Convertor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Base_Convertor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Base_Convertor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Base_Convertor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Base_Convertor().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox from_unit;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox to_unit;
    private javax.swing.JTextField txt_from;
    private javax.swing.JLabel txt_to;
    // End of variables declaration//GEN-END:variables

    private void CloseFrame() {
        super.dispose();
    }
}
